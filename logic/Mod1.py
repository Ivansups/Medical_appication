def mod1_first(T, CYP):
    T = abs(T)
    if T >= 25:
        if CYP == "CYP 2c19*1":
            return (
                "Нормальный метаболизм клопидогрела",
                [
                    "Заменить клопидогрел на оригинальный препарат (Плавикс) или препарат другого производителя",
                    "Контроль агрегации тромбоцитов через 7 дней терапии"
                ]
            )
        elif CYP == "CYP 2c19*2" or CYP == "CYP 2c19*3":
            return (
                "Замедление метаболизма клопидогрела",
                [
                    "Заменить АСК+клопидогрел на комбинацию препаратов АСК+тикагрелор",
                    "Контроль агрегации тромбоцитов через 7 дней терапии"
                ]
            )
        elif CYP == "CYP 2c19*17":
            return (
                "Ускорение метаболизма клопидогрела",
                [
                    "Терапию АСК+клопидогрел продолжить",
                    "Риск геморрагических осложнений"
                ]
            )
    elif 10 < T < 25:
        if CYP == "CYP 2c19*1":
            return (
                "Нормальный метаболизм клопидогрела",
                [
                    "Терапию АСК+клопидогрел продолжить",
                    "Риск геморрагических осложнений"
                ]
            )
        elif CYP == "CYP 2c19*17":
            return (
                "Ускорение метаболизма клопидогрела",
                [
                    "Терапию АСК+клопидогрел продолжить",
                    "Риск геморрагических осложнений"
                ]
            )
    elif T <= 10:
        if CYP == "CYP 2c19*1":
            return (
                "Нормальный метаболизм клопидогрела",
                [
                    "Терапию АСК+клопидогрел продолжить",
                    "Высокий риск геморрагических осложнений"
                ]
            )
        elif CYP == "CYP 2c19*17":
            return (
                "Ускорение метаболизма клопидогрела",
                [
                    "Терапию АСК+клопидогрел продолжить",
                    "Высокий риск геморрагических осложнений"
                ]
            )
    return ("Неизвестная комбинация", [])

def mod1_first_ABCB1(ABCB1):
    if ABCB1 == "TT":
        return "Выведение клопидогрела ускорено"
    elif ABCB1 == "TC":
        return "Незначительное ускорение выведения клопидогрела"
    elif ABCB1 == "CC":
        return "Нормальная скорость выведения клопидогрела"
    else:
        return "Нет данных"

def mod1_second(T):
    if T is None:
        return ("Нет данных",)
    try:
        T = float(T)
    except Exception:
        return ("Нет данных",)
    if T <= 10:
        return ( 
            "Агрегация тромбоцитов значительно подавлена",
        )
    elif 10 < T < 25:
        return (
            "Агрегация тромбоцитов умеренно подавлена",
        )
    elif T >= 25:
        return (
            "Агрегация тромбоцитов сохранена",
        )
    return ("Нет данных",)
